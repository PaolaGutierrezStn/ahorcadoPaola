/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Paola
 */
public class ahorcado extends javax.swing.JFrame {
    //palabras leidas del archivo
    private Map<String, String> listaPalabras = new HashMap<>();
    private Integer cont = 0; //cuenta las palabras del archivo
    private StringBuilder palabra = new StringBuilder();
    private Integer intentos = 0;
    
    //Random ran = new Random(); //palabras aleatorias 
    //int r = ran.nextInt(20)+1; //palabras aleatorias 
   
    /**
     * Creates new form ahorcado
     */
   
        
    
    public ahorcado() throws IOException {
        initComponents();
        centrarForma();
        //cargar el archivo con las palabras
         
    }
    
    private void leerArchivo(File aFile) throws FileNotFoundException, IOException{
        
        int contPalabra = 0;//cuenta el numero de palabras leidas
         try{
            BufferedReader input = new BufferedReader(new FileReader(aFile));
         try{
            String line = null; //extrae linea por linea de texto
            while ((line = input.readLine()) != null){
                listaPalabras.put("" + contPalabra, line);
                contPalabra++;
            }
            }finally{
                input.close();
            }
            }catch(IOException ex){
                ex.printStackTrace();
            }      
    }
    
    //cargar una plabara de la lista
    private void loadNextWord(int indice){
        
        String line = listaPalabras.get("" + indice);//extrae la primera linea
        StringBuilder wordConGuion = new StringBuilder();
        String[] datos = line.split(":");//diferencia entre palabra y descripcion
        
        palabra = new StringBuilder();
        
        //palabra a cargar
        for (Character car : datos[0].toUpperCase().toCharArray()){
            palabra.append(car);
            palabra.append(" ");
            wordConGuion.append("_");
            wordConGuion.append(" ");
        }
        
        txtDescripcion.setText(datos[1]);
        txtPalabra.setText(wordConGuion.toString());
        txtAdivinar.setText("");
    }
    

    
    public void cambiarImagen(){
        if (intentos==1){
            labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ahorcado1-.png")));
            labelNum.setText("1");
        }
        
        if (intentos==2){
            labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ahorcado2-.png")));
            labelNum.setText("2");
        }
        
        if (intentos==3){
            labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ahorcado3-.png")));
            labelNum.setText("3");
        }
        
        if (intentos==4){
            labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ahorcado4-.png")));
            labelNum.setText("4");
        }
        
        if (intentos==5){
            labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ahorcado5-.png")));
            labelNum.setText("5");
        }
        
        if (intentos==6){
            labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ahorcado6-.png")));
            labelNum.setText("6");
           
            
       Icon gtz = new ImageIcon(getClass().getResource("/images/crying-emoji-.png"));
       JOptionPane.showMessageDialog(null,"Terminaron los intentos. \n Perdiste", "Perdiste", JOptionPane.INFORMATION_MESSAGE, gtz);
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        labelNum = new javax.swing.JLabel();
        kjei = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        labelImagen = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        botonJugar = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        btnVolverJugar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtPalabra = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtAdivinar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLetras = new javax.swing.JTextArea();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Learning Curve", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Juego del Ahorcado");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setLayout(new java.awt.GridLayout(2, 1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 204));
        jLabel2.setFont(new java.awt.Font("DK Cool Crayon", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("No. Intentos");
        jLabel2.setOpaque(true);
        jPanel4.add(jLabel2);

        labelNum.setBackground(new java.awt.Color(241, 239, 239));
        labelNum.setFont(new java.awt.Font("Learning Curve", 0, 48)); // NOI18N
        labelNum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNum.setText("0");
        jPanel4.add(labelNum);

        kjei.setBackground(new java.awt.Color(204, 255, 204));

        labelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ahorcado0-.png"))); // NOI18N

        javax.swing.GroupLayout kjeiLayout = new javax.swing.GroupLayout(kjei);
        kjei.setLayout(kjeiLayout);
        kjeiLayout.setHorizontalGroup(
            kjeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kjeiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(kjeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kjeiLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kjeiLayout.createSequentialGroup()
                        .addComponent(labelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        kjeiLayout.setVerticalGroup(
            kjeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kjeiLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(labelImagen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setLayout(new java.awt.GridLayout(3, 1));

        botonJugar.setBackground(new java.awt.Color(255, 255, 204));
        botonJugar.setText("Jugar");
        botonJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonJugarActionPerformed(evt);
            }
        });
        jPanel6.add(botonJugar);

        botonSalir.setBackground(new java.awt.Color(255, 255, 204));
        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        jPanel6.add(botonSalir);

        btnVolverJugar.setBackground(new java.awt.Color(255, 255, 204));
        btnVolverJugar.setText("Volver a jugar");
        btnVolverJugar.setActionCommand("");
        btnVolverJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverJugarActionPerformed(evt);
            }
        });
        jPanel6.add(btnVolverJugar);

        jPanel2.setLayout(new java.awt.GridLayout(4, 2));

        jLabel5.setBackground(new java.awt.Color(255, 255, 204));
        jLabel5.setFont(new java.awt.Font("DK Cool Crayon", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Palabra");
        jLabel5.setOpaque(true);
        jPanel2.add(jLabel5);

        txtPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPalabraActionPerformed(evt);
            }
        });
        txtPalabra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPalabraKeyTyped(evt);
            }
        });
        jPanel2.add(txtPalabra);

        jLabel9.setBackground(new java.awt.Color(204, 255, 204));
        jLabel9.setFont(new java.awt.Font("DK Cool Crayon", 0, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Descripción");
        jLabel9.setOpaque(true);
        jPanel2.add(jLabel9);
        jPanel2.add(txtDescripcion);

        jLabel10.setBackground(new java.awt.Color(255, 255, 204));
        jLabel10.setFont(new java.awt.Font("DK Cool Crayon", 0, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Adivinar");
        jLabel10.setOpaque(true);
        jPanel2.add(jLabel10);

        txtAdivinar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAdivinarKeyTyped(evt);
            }
        });
        jPanel2.add(txtAdivinar);

        jLabel11.setBackground(new java.awt.Color(204, 255, 204));
        jLabel11.setFont(new java.awt.Font("DK Cool Crayon", 0, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Letras erradas");
        jLabel11.setOpaque(true);
        jPanel2.add(jLabel11);

        txtLetras.setColumns(20);
        txtLetras.setRows(5);
        jScrollPane1.setViewportView(txtLetras);

        jPanel2.add(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kjei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kjei, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPalabraActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtPalabraActionPerformed

    private void txtPalabraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPalabraKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPalabraKeyTyped

    private void txtAdivinarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdivinarKeyTyped
        // TODO add your handling code here:
        char car = evt.getKeyChar();
        
        String letra = "" + car;
        letra = letra.toUpperCase();
        car = letra.charAt(0);
        int pos = palabra.indexOf("" + car);
        
        
        /*if(pos >= 0){
            StringBuilder word = new StringBuilder(txtPalabra.getText());
            //word.replace(pos, pos + 1, "" + car);
            txtPalabra.setText(word.toString());
            
            if(gana()){
                JOptionPane.showMessageDialog(this, "Ganaste");
                cont++;
            }
            
           }else{
            //cambiarImagen();
            //labelNum.setText(intentos.toString());
            txtLetras.setText(txtLetras.getText() + car);
            
            
                if(intentos>=6){
                    JOptionPane.showMessageDialog(this, "Perdiste, intentalo otra vez");
                }
                
              intentos++;
        }*/
        
        
        
        
       if(!(Character.isAlphabetic(car))){
        evt.consume();//ingnorarlo 
        }else{
            //int pos = palabra.indexOf("" + car); //inidca la posicion del caracter
            StringBuilder adivina = new StringBuilder();
            
            if(pos>=0){
                adivina.append(txtPalabra.getText());
                
                while (pos>=0){ //en caso de que halla mas palabras
                    
                    palabra.replace(pos, pos +1, "_"); //cambia a guiones
                    adivina.replace(pos, pos +1, "" + car); //cambia a letras
                    pos = palabra.indexOf("" + car);
                    
               }
                
                if(txtPalabra.getText().indexOf("_")<0){
                    JOptionPane.showMessageDialog(null, "Ganaste");
                    loadNextWord(cont+=1);
                }
            
                
                txtPalabra.setText(adivina.toString());
                txtAdivinar.setText("");
                
            }else{
                evt.consume();
                intentos++;
                txtLetras.setText(txtLetras.getText() + car);
            }
             
            
        }
        
        cambiarImagen();
       
        
        
        
       /* txtLetras.setText(txtLetras.getText() + " " + car);
        
        if(car==KeyEvent.VK_BACK_SPACE){
            txtLetras.setText(txtLetras.getText().substring(0, txtLetras.getText().length()-2));
        }
        
        if(car==KeyEvent.VK_SPACE){
            txtLetras.setText(txtLetras.getText().substring(0, txtLetras.getText().length()-2));
        }*/
        
    }//GEN-LAST:event_txtAdivinarKeyTyped

    private void botonJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonJugarActionPerformed
       File archivo = new File ("E:\\ahorcado.txt");
        try {
            leerArchivo(archivo);
        } catch (IOException ex) {
            Logger.getLogger(ahorcado.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        loadNextWord(cont);
        txtAdivinar.requestFocus();
    }//GEN-LAST:event_botonJugarActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        
        Icon stn = new ImageIcon(getClass().getResource("/images/happyhappy-.png"));
        JOptionPane.showMessageDialog(null,"Adios, vuelve pronto", "Salir", JOptionPane.INFORMATION_MESSAGE, stn);
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void btnVolverJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverJugarActionPerformed
        // TODO add your handling code here:
        
        txtLetras.setText("");
        loadNextWord(cont);
        ahorcado.main(null);
        intentos=0;
        cambiarImagen();
        
    }//GEN-LAST:event_btnVolverJugarActionPerformed

    /**
     * @param args the command line arguments
     */
   
    private void centrarForma(){
        
        //Dimension de la pantalla ANCHO Y ALTO
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        //Dimension de la ventana
        Dimension ventana = this.getSize();
        //posicion del borde superior izquierdo de la pantalla
        double posX = (pantalla.getWidth() - ventana.getWidth())/2.0;
        double posY = (pantalla.getHeight() - ventana.getHeight())/2.0;
        
        //Establece la posicion
        this.setLocation((int)posX, (int)posY);
    }
    
    public boolean gana(){
        String palabra2="";
        for(int i=0 ; i<palabra.length() ; i++){
            palabra2+= palabra.charAt(i);
            
        }
      return (txtPalabra.getText().equalsIgnoreCase(palabra2));
    }

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ahorcado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ahorcado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ahorcado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ahorcado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ahorcado().setVisible(true);
               } catch (IOException ex) {
                    Logger.getLogger(ahorcado.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonJugar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton btnVolverJugar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel kjei;
    private javax.swing.JLabel labelImagen;
    private javax.swing.JLabel labelNum;
    private javax.swing.JTextField txtAdivinar;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextArea txtLetras;
    private javax.swing.JTextField txtPalabra;
    // End of variables declaration//GEN-END:variables

    /*private void leerArchivo(File archivo) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }*/

    /*private void loadNextWord(Integer cont) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }*/
}
